{"version":3,"sources":["Contants/ActionType.js","Actions/index.js","Components/TaskForm.js","Components/Search.js","Components/Sort.js","Components/Control.js","Components/TaskListitem.js","Components/TaskLisk.js","App.js","reportWebVitals.js","Reducers/Task.js","Reducers/togglefrom.js","Reducers/isDisEditting.js","Reducers/flitertable.js","Reducers/searchtable.js","Reducers/sorttable.js","Reducers/index.js","index.js"],"names":["LIST_ALL","ADD_TASK","TOGGLE_FROM","CLOSE_FROM","UPDATE_STATUS","DELETE_TASK","EDIT_FROM","OPEN_FROM","FILTER_TABLE","SEARCH_TABLE","SORT_TABLE","edittask","task","type","TaskForm","props","onChange","e","name","target","value","setState","onSubmit","preventDefault","onAddTask","state","closeForm","close","status","id","this","taskEditing","className","onClick","placeholder","required","Component","connect","isDisEditting","dispatch","action","Search","onSearch","keywords","keywork","Sort","sort","sortname","sortstatus","a","sortby","onSort","data-toggle","aria-haspopup","aria-expanded","role","actions","Control","TaskListitem","onSpan","onUpdateStatus","onDelete","onEditing","openFrom","onEdit","index","TaskLisk","fliter","filtername","filterStatus","onFilter","filtertable","searchtable","console","log","b","filter","toLowerCase","indexOf","elements","map","Task","sorttable","App","getGender","randomstring","require","generate","localStorage","setItem","JSON","stringify","addTask","onDisplayForm","onClear","isDisplayForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","data","parse","getItem","inintState","myReducer","push","newtask","i","length","splice","initialState","initstate","newstate","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.342564cb.chunk.js","sourcesContent":["export const LIST_ALL=\"LIST_ALL\";\r\nexport const ADD_TASK=\"ADD_TASK\";\r\nexport const TOGGLE_FROM=\"TOGGLE_FROM\";\r\nexport const CLOSE_FROM=\"CLOSE_FROM\";\r\nexport const UPDATE_STATUS=\"UPDATE_STATUS\";\r\nexport const DELETE_TASK=\"DELETE_TASK\";\r\nexport const EDIT_FROM=\"EDIT_FROM\";\r\nexport const OPEN_FROM=\"OPEN_FROM\";\r\nexport const FILTER_TABLE=\"FILTER_TABLE\";\r\nexport const SEARCH_TABLE=\"SEARCH_TABLE\";\r\nexport const SORT_TABLE=\"SORT_TABLE\";","import * as type from \"./../Contants/ActionType\"\r\nexport const listall =()=>{\r\n    return{\r\n        type:type.LIST_ALL\r\n    }\r\n}\r\nexport const addtask =(task)=>{\r\n    return{\r\n        type:type.ADD_TASK,\r\n        task:task\r\n    }\r\n}\r\nexport const togglefromtask =()=>{\r\n    return{\r\n        type:type.TOGGLE_FROM\r\n    }\r\n}\r\nexport const closefromtask =()=>{\r\n    return{\r\n        type:type.CLOSE_FROM\r\n    }\r\n}\r\nexport const updatestatus=(id)=>{\r\n    return{\r\n        type:type.UPDATE_STATUS,\r\n        id:id\r\n    }\r\n}\r\nexport const deletetask=(id)=>{\r\n    return{\r\n        type:type.DELETE_TASK,\r\n        id:id\r\n    }\r\n}\r\nexport const openfrom=()=>{\r\n    return{\r\n        type:type.OPEN_FROM\r\n    }\r\n}\r\nexport const edittask=(task)=>{\r\n    return{\r\n        type:type.EDIT_FROM,\r\n        task:task\r\n        \r\n    }\r\n}\r\nexport const filtertable=(fliter)=>{\r\n   return{\r\n       type:type.FILTER_TABLE,\r\n       fliter:fliter\r\n   }\r\n}\r\nexport const searchtable=(keywork)=>{\r\n    return{\r\n        type:type.SEARCH_TABLE,\r\n        keywork:keywork\r\n    }\r\n}\r\nexport const sorttable=(sort)=>{\r\n    return{\r\n        type:type.SORT_TABLE,\r\n        sort:sort,\r\n        \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as action from './../Actions/index'\r\n\r\nclass TaskForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name:'',\r\n            status:false,\r\n            id:'',\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.taskEditing)\r\n        {\r\n            this.setState({\r\n                id:this.props.taskEditing.id,\r\n                name:this.props.taskEditing.name,\r\n                status:this.props.taskEditing.status,\r\n            })\r\n        }\r\n      \r\n    }\r\n    componentWillReceiveProps(value){\r\n      if(value && value.taskEditing){\r\n      this.setState({   \r\n          id:value.taskEditing.id,\r\n          name:value.taskEditing.name,\r\n          status:value.taskEditing.status,\r\n      })\r\n       }\r\n       else if (!value.taskEditing)\r\n       {\r\n        this.setState({\r\n            name:'',\r\n            status:false,\r\n            id:'',\r\n        })\r\n       }\r\n    }\r\n    \r\n   \r\n    onChange = (e) => {\r\n        var name = e.target.name;\r\n        var value=e.target.value;\r\n        if(name===\"status\"){\r\n         var value=e.target.value=== \"true\"?true:false;\r\n       }\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n       \r\n    }\r\n    \r\n    onSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.onAddTask(this.state)\r\n        \r\n        this.props.closeForm()\r\n    }\r\n   \r\n    close=()=>{\r\n        this.props.closeForm()\r\n    }\r\n    render() {\r\n        var {id}=this.state\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\"><p>{id===''?`Thêm Công việc`:`Cập nhật Công việc`} <i className=\"fas fa-times-circle\" onClick={this.close}></i></p></div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label>Tên:</label>\r\n                                <input type=\"text\"\r\n                                    className=\"form-control\" name=\"name\" id=\"\"  placeholder=\"\" onChange={this.onChange} value={this.state.name} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Trạng Thái:</label>\r\n                                <select className=\"form-control\" required=\"required\" name=\"status\" value={this.state.status} onChange={this.onChange}>\r\n                                    <option value={true}>Kích Hoạt</option>\r\n                                    <option value={false}>Ẩn</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"btn-group\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fa fa-save\"></i>Lưu Lại</button>\r\n                                <button type=\"button\" className=\"btn btn-error\" onClick={this.close} ><i className=\"fas fa-window-close\"></i>Hủy Bỏ</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return {\r\n        taskEditing: state.isDisEditting\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch,props)=>{\r\n    return {\r\n        onAddTask:(task)=>{\r\n            dispatch(action.addtask(task))\r\n        },\r\n        closeForm:()=>{\r\n            dispatch(action.closefromtask())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps   ) (TaskForm);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport *as action from './../Actions/index'\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keywords:'',\r\n        }\r\n    }\r\n    onChange=(e)=>{\r\n        var name = e.target.name;\r\n        var value = e.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    \r\n    onClick=()=>{\r\n        this.props.onSearch(this.state)\r\n        \r\n    }\r\n    render() {\r\n        var {keywords} = this.state\r\n        return (\r\n            <div className=\"col-sm-6 col-md-6 col-lg-6 col-xs-6\">\r\n                <div className=\"form-group\">\r\n                    <div className=\"input-group mt-2\">\r\n                        <input type=\"text\"\r\n                            className=\"form-control\" name=\"\"  placeholder=\"Nhập từ khóa ...\" name=\"keywords\" value={keywords} onChange={this.onChange} />\r\n                        <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-primary\" type=\"button\"onClick={this.onClick}><i className=\"far fa-search\" ></i>Tìm Kiếm</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps =(state) =>{\r\n    return {}\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        onSearch:(keywords)=>{\r\n            dispatch(action.searchtable(keywords))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)  (Search);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport *as actions from './../Actions/index'\r\n\r\n\r\nclass Sort extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            sortby:'',\r\n            sortstatus:-1\r\n            \r\n        }\r\n    }\r\n  sort= async (sortname,sortstatus) => {\r\n    await this.setState({\r\n           \r\n               sortby:sortname,\r\n               sortstatus:sortstatus\r\n           \r\n       })\r\n       this.props.onSort(this.state)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"col-sm-6 col-md-6 col-lg-6 col-xs-6 mt-2\">\r\n                <div className=\"btn-group\">\r\n                    <button type=\"button\" className=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Sắp Xếp\r\n                    </button>\r\n                    <div className=\"dropdown-menu dropdown-menu-right\">\r\n                        <button className=\"dropdown-item\" type=\"button\" onClick={()=>{this.sort('name',1)}}><a>\r\n                            <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                                Tên A-Z\r\n                            </span>\r\n                        </a></button>\r\n                        <button className=\"dropdown-item\" type=\"button\"  onClick={()=>{this.sort('name',-1)}}><a role=\"button\">\r\n                            <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n                                Tên Z-A\r\n                            </span>\r\n                        </a></button>\r\n                        <button className=\"dropdown-item\" type=\"button\"  onClick={()=>{this.sort('status',1)}}><a role=\"button\">Trạng Thái Kích Hoạt</a></button>\r\n                        <button className=\"dropdown-item\" type=\"button\"  onClick={()=>{this.sort('status',-1)}}><a role=\"button\">Trạng Thái Ẩn</a></button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state) =>{\r\n    return {}\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        onSort:(sort)=>{\r\n            dispatch(actions.sorttable(sort))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps) (Sort);","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\nclass Control extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {/*search*/}\r\n                <Search  />\r\n\r\n                {/*Sort*/}\r\n                <Sort   />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Control;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './../Actions/index'\r\n\r\nclass TaskListitem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    onSpan=()=>{\r\n        this.props.onUpdateStatus(this.props.value.id)\r\n    }\r\n    onDelete=()=>{\r\n        this.props.onDelete(this.props.value.id)\r\n    }\r\n    onEditing=()=>{\r\n        this.props.openFrom()\r\n        this.props.onEdit(this.props.value)\r\n    }\r\n    render() {\r\n        var {value,index}=this.props\r\n        return (\r\n            <tr > \r\n                <td >{index+1}</td>\r\n                <td>{value.name}</td>\r\n                <td className=\"text-center\">\r\n                {value.status?<span className=\"badge badge-success\" onClick={this.onSpan}>Kich hoạt</span>:<span onClick={this.onSpan} className=\"badge badge-secondary\">Ẩn</span>}\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button type=\"button\" className=\"btn btn-warning\" onClick={this.onEditing}>\r\n                        <span className=\"fa fa-pencil mr-5\"></span>Sửa\r\n                    </button>\r\n                    &nbsp;\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.onDelete}>\r\n                        <span className=\"fa fa-trash mr-5\"></span>Xóa\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return {\r\n       \r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return {\r\n        onUpdateStatus:(id)=>{\r\n            dispatch(actions.updatestatus(id))\r\n        },\r\n        onDelete:(id)=>{\r\n            dispatch(actions.deletetask(id))\r\n        },\r\n        openFrom:()=>{\r\n            dispatch(actions.openfrom())\r\n        },\r\n        onEdit:(task)=>{\r\n            dispatch(actions.edittask(task))\r\n        },\r\n       \r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps) (TaskListitem);","import React, { Component } from 'react';\r\nimport TaskListitem from './TaskListitem';\r\nimport { connect } from 'react-redux';\r\nimport * as action from './../Actions/index'\r\n\r\nclass TaskLisk extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filtername: '',\r\n            filterStatus:-1\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        var name = e.target.name\r\n        var value = e.target.value\r\n        var fliter = {\r\n            name: name === \"filtername\" ? value : this.state.filtername,\r\n            status: name === \"filterStatus\" ? value : this.state.filterStatus\r\n        }\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        \r\n        this.props.onFilter(fliter)\r\n    }\r\n    render() {\r\n        \r\n        var { task, filtertable, searchtable,sort } = this.props;\r\n        console.log(typeof(sort.sortstatus))\r\n        if(sort.sortby ===\"name\")\r\n        {\r\n            task=task.sort((a,b)=>{\r\n              if(a.name>b.name) return sort.sortstatus\r\n              else if(a.name<b.name) return -sort.sortstatus\r\n              return 0\r\n            })\r\n        } else {\r\n            task = task.sort((a,b)=>{\r\n                if(a.status>b.status) return -sort.sortstatus\r\n               else if(a.status<b.status) return sort.sortstatus\r\n               else return 0\r\n            })\r\n        }\r\n        \r\n        if (searchtable) {\r\n           \r\n            \r\n                task = task.filter((value) => {\r\n                    return value.name.toLowerCase().indexOf(searchtable.keywords.toLowerCase()) !== -1\r\n                })\r\n            \r\n        }\r\n        if (filtertable) {\r\n            if (filtertable.name) {\r\n                task = task.filter((value) => {\r\n                    return value.name.toLowerCase().indexOf(filtertable.name.toLowerCase()) !== -1\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        task = task.filter((value) => {\r\n            if (filtertable.status === -1) {\r\n                return value\r\n            }\r\n            else {\r\n                return value.status === (filtertable.status === 1 ? true : false)\r\n            }\r\n        })\r\n\r\n        var elements = task.map((value, index) => {\r\n            return (\r\n                <TaskListitem key={index} index={index} value={value} />\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"row mt-15\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <table className=\"table table-bordered table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-center\">STT</th>\r\n                                <th className=\"text-center\">Tên</th>\r\n                                <th className=\"text-center\">Trạng Thái</th>\r\n                                <th className=\"text-center\">Hành Động</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"filtername\" onChange={this.onChange} value={this.state.filtername} />\r\n                                </td>\r\n                                <td>\r\n                                    <select className=\"form-control\" name=\"filterStatus\" onChange={this.onChange}  value={this.state.filterStatus} >\r\n                                        <option value={-1}>Tất Cả</option>\r\n                                        <option value={0}>Ẩn</option>\r\n                                        <option value={1}>Kích Hoạt</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                            {elements}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        task: state.Task,\r\n        filtertable: state.filtertable,\r\n        searchtable: state.searchtable,\r\n        sort:state.sorttable\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onFilter: (filter) => {\r\n            dispatch(action.filtertable(filter))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskLisk);","\nimport './App.css';\nimport TaskForm from './Components/TaskForm';\nimport Control from './Components/Control';\nimport TaskLisk from './Components/TaskLisk';\nimport React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from './Actions/index';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n  }\n \n  getGender = () => {\n    var randomstring = require(\"randomstring\");\n    var task = [\n      {\n        id: randomstring.generate(),\n        name: 'Học lập trình Js',\n        status: false,\n      },\n      {\n        id: randomstring.generate(),\n        name: 'Học lập trình ReactJs',\n        status: true,\n      },\n      {\n        id: randomstring.generate(),\n        name: 'Học lập trình',\n        status: false,\n      }\n    ]\n    this.setState({\n      task: task\n    })\n    localStorage.setItem('task', JSON.stringify(task))\n  }\n  addTask = () => {\n      this.props.onDisplayForm()\n      this.props.onClear(\n        {\n          id:'',\n          name:'',\n          status:true,\n        }\n      )\n  }\n  onFilter = (name, value) => {\n    var value = +value\n    var name = name.toLowerCase()\n    this.setState({\n      fliter: {\n        name: name,\n        status: value\n      }\n    })\n\n  }\n  keywords = (value) => {\n    this.setState({\n      keywords: value.keywords\n    })\n  }\n  sort = (value) => {\n    this.setState(\n      {\n        sortby: value.sortby,\n        sortstatus: value.sortstatus\n\n      }\n    )\n\n\n  }\n  render() {\n    var {isDisplayForm}=this.props\n    var elements = isDisplayForm ? <TaskForm  /> : '';\n    return (\n      <div className=\"container\">\n        <h1>Quản Lý Công Việc</h1>\n        <div className=\"row mt-5\">\n          <div className={isDisplayForm ? \"col-sm-4 col-md-4 col-lg-4 col-xs-4\" : \"\"}>\n            {elements}\n          </div>\n          <div className={isDisplayForm ? \"col-sm-8 col-md-8 col-lg-8 col-xs-8\" : \"col-sm-12 col-md-12 col-lg-12 col-xs-12\"}>\n            <button type=\"button\" className=\"btn btn-primary\" name=\"add\" onClick={this.addTask}><i className=\"fas fa-plus\"></i>Thêm Công việc</button>\n            <button type=\"button\" className=\"btn btn-gender ml-2\" name=\"add\" onClick={this.getGender}>GetGender</button>\n            <Control keywords={this.keywords} sort={this.sort} />\n            {/*Task_Lisk */}\n            <TaskLisk   onFilter={this.onFilter} />\n          </div>\n        </div>\n      </div >\n    );\n  }\n}\nconst mapStateToProps =(state) =>{\n  return {\n    isDisplayForm:state.isDisplayForm,\n    \n  }\n}\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    onDisplayForm:()=>{\n      dispatch(actions.togglefromtask())\n    },\n    onClear:(task)=>{\n      dispatch(actions.edittask(task))\n    }\n    \n  }\n}\nexport default  connect(mapStateToProps, mapDispatchToProps)  (App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as type from \"./../Contants/ActionType\"\r\n\r\n\r\nvar findIndex = (task, id) => {\r\n    var result = -1;\r\n    for (var i = 0; i < task.length; i++) {\r\n        if (task[i].id === id) {\r\n            result = i\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar data = JSON.parse(localStorage.getItem(\"task\"))\r\nvar inintState = data ? data : [];\r\n\r\n\r\nvar myReducer = (state = inintState, action) => {\r\n    var randomstring = require(\"randomstring\");\r\n\r\n    switch (action.type) {\r\n        case type.LIST_ALL:\r\n            return state;\r\n        case type.ADD_TASK:\r\n            if (action.task.id === \"\") {\r\n                action.task.id = randomstring.generate()\r\n                state.push(action.task)\r\n            } else {\r\n                var newtask = {\r\n                    id: action.task.id,\r\n                    name: action.task.name,\r\n                    status: action.task.status\r\n                }\r\n                for (var i = 0; i < state.length; i++) {\r\n                    if (state[i].id === action.task.id) {\r\n\r\n                        state[i] = newtask;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            localStorage.setItem(\"task\", JSON.stringify(state))\r\n            return [...state]\r\n        case type.UPDATE_STATUS:\r\n            var id = action.id\r\n            for (var i = 0; i < state.length; i++) {\r\n                if (state[i].id === id) {\r\n                    var newtask = {\r\n                        id: state[i].id,\r\n                        name: state[i].name,\r\n                        status: !state[i].status\r\n                    }\r\n                    state[i] = newtask;\r\n                }\r\n\r\n            }\r\n\r\n            localStorage.setItem('task', JSON.stringify(state))\r\n            return [...state];\r\n        case type.DELETE_TASK:\r\n            for (var i = 0; i < state.length; i++) {\r\n                if (state[i].id === action.id) {\r\n                    state.splice(i, 1)\r\n                }\r\n            }\r\n            localStorage.setItem('task', JSON.stringify(state))\r\n            return [...state];\r\n        default: return state;\r\n    }\r\n\r\n}\r\nexport default myReducer","import *as type from \"./../Contants/ActionType\"\r\nvar initialState=false\r\nvar myReducer=(state=initialState,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case type.TOGGLE_FROM:\r\n            return state=!state\r\n        case type.CLOSE_FROM:\r\n            return state=false  \r\n        case type.EDIT_FROM:\r\n            return state=true\r\n        case type.OPEN_FROM:\r\n            return state=true\r\n        default: return state\r\n        \r\n    }\r\n     \r\n\r\n}\r\nexport default myReducer","import *as type from \"./../Contants/ActionType\"\r\nvar initialState={\r\n    id:\"\",\r\n    name:\"\",\r\n    status:false,\r\n}\r\nvar myReducer=(state=initialState,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case type.EDIT_FROM:\r\n           return state=action.task\r\n           \r\n        default: return state\r\n        \r\n    }\r\n     \r\n\r\n}\r\nexport default myReducer","import * as type from \"./../Contants/ActionType\"\r\nvar initstate={\r\n    name: '',\r\n    status:-1,\r\n}\r\nvar myReducer=(state=initstate,action)=>{\r\n        switch(action.type)\r\n        {\r\n            case type.FILTER_TABLE:\r\n                var name=action.fliter.name\r\n                var status=action.fliter.status\r\n                var newstate={\r\n                    name:name,\r\n                    status:+status\r\n                }\r\n                console.log(newstate)\r\n                return state=newstate\r\n            default: return state\r\n        }\r\n\r\n}\r\nexport default myReducer","import * as type from './../Contants/ActionType'\r\nvar initstate=''\r\nvar myReducer =(state=initstate,action)=>{\r\n    switch (action.type) {\r\n        case type.SEARCH_TABLE:\r\n            return state=action.keywork\r\n    default:return state        \r\n    }\r\n}\r\nexport default myReducer","import *as type from './../Contants/ActionType'\r\nvar inintState={\r\n    sortby:'',\r\n    sortstatus:1,\r\n\r\n}\r\nvar myReducer=(state=inintState,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case type.SORT_TABLE:\r\n            \r\n            return state=action.sort\r\n\r\n        default:return state\r\n\r\n    }\r\n\r\n}\r\nexport  default myReducer","import { combineReducers } from 'redux'\r\nimport Task from './Task'\r\nimport isDisplayForm from './togglefrom'\r\nimport isDisEditting from './isDisEditting'\r\nimport filtertable  from './flitertable'\r\nimport searchtable from './searchtable'\r\nimport sorttable from './sorttable'\r\nconst myReducer = combineReducers(\r\n    {\r\n        Task:Task,\r\n        isDisplayForm:isDisplayForm,\r\n        isDisEditting:isDisEditting,\r\n        filtertable:filtertable,\r\n        searchtable:searchtable,\r\n        sorttable:sorttable\r\n    }\r\n)\r\nexport default myReducer ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\nimport myReducer from './Reducers/index';\nimport { Provider } from \"react-redux\";\n\nlet store = createStore(myReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}